# -*- coding: utf-8 -*-
"""RESULTADOS DESCRIPTIVOS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1d24yk7OnCiheTmiH3DFhbnk_xyL-GPGT
"""

# Importar las librerías necesarias
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


# Cargar los datos desde los archivos Excel
df_encuesta = pd.read_excel('Encuesta.xlsx')
df_plataforma = pd.read_excel('Datos plataforma.xlsx')


# Limpiar nombres de columnas en la encuesta (eliminar espacios adicionales)
df_encuesta.columns = df_encuesta.columns.str.strip()

# Seleccionar columnas relevantes para el análisis descriptivo de la encuesta
columnas_encuesta = [
    'Peso (kg)', 'Estatura (cm)', '¿Tiene dificultades para caminar?', 'Edad',
    '¿Usa algún dispositivo de apoyo para caminar?', '¿Con qué frecuencia realiza ejercicio físico?'
]
df_encuesta_seleccionada = df_encuesta[columnas_encuesta]

# Obtener estadísticas descriptivas de la encuesta
tabla_descriptiva_encuesta = df_encuesta_seleccionada.describe(include='all').reset_index()
tabla_descriptiva_encuesta.columns = [
    'Estadística', 'Peso (kg)', 'Estatura (cm)', 'Dificultades para caminar', 'Edad',
    'Dispositivo de apoyo', 'Frecuencia de ejercicio físico'
]

# Corregir el nombre de la columna de presión en el archivo de plataforma, si tiene errores
df_plataforma.rename(columns={'Presión promedio en el pie Der. (gr/cm²9': 'Presión promedio en el pie Der. (gr/cm²)'}, inplace=True)

# Seleccionar columnas relevantes para el análisis descriptivo de la plataforma
columnas_plataforma = [
    'Presión promedio en el pie Izq. (gr/cm²)', 'Presión promedio en el pie Der. (gr/cm²)',
    'Carga en el pie Izq. (%)', 'Carga en el pie Der. (%)'
]
df_plataforma_seleccionada = df_plataforma[columnas_plataforma]


#*******************************************************

# Diagrama de caja para comparar presión promedio en ambos pies
plt.figure(figsize=(7, 5))
sns.boxplot(data=df_plataforma_seleccionada[['Presión promedio en el pie Izq. (gr/cm²)',
                                             'Presión promedio en el pie Der. (gr/cm²)']])
plt.title('Presión Promedio en Cada Pie')
plt.ylabel('Presión (gr/cm²)')
plt.xticks([0, 1], ['Pie Izquierdo', 'Pie Derecho'])

# Añadir valores en el boxplot
for i, columna in enumerate(['Presión promedio en el pie Izq. (gr/cm²)', 'Presión promedio en el pie Der. (gr/cm²)']):
    plt.text(i, df_plataforma_seleccionada[columna].median(),
             f"{df_plataforma_seleccionada[columna].median():.2f}",
             ha='center', color='black', weight='bold')

plt.show()


# Gráfico de barras para dificultades para caminar
plt.figure(figsize=(8, 6))
ax = sns.countplot(x='¿Tiene dificultades para caminar?', data=df_encuesta)
plt.title('Dificultades para Caminar')
plt.xlabel('Respuesta')
plt.ylabel('Frecuencia')

# Ajustar etiquetas en el eje X con saltos de línea
etiquetas_ajustadas = [
    'Sí, en superficies\nirregulares',
    'Sí, en distancias\ncortas',
    'No tengo\nninguna dificultad',
    'Sí, en distancias\nlargas'
]
ax.set_xticklabels(etiquetas_ajustadas)

# Añadir etiquetas de conteo en cada barra
for p in ax.patches:
    ax.annotate(f'{int(p.get_height())}',
                (p.get_x() + p.get_width() / 2., p.get_height()),
                ha='center', va='baseline')

plt.tight_layout()
plt.show()

# Diagrama de caja para la carga en cada pie
plt.figure(figsize=(7, 5))
sns.boxplot(data=df_plataforma_seleccionada[['Carga en el pie Izq. (%)', 'Carga en el pie Der. (%)']])
plt.title('Distribución de Carga en Cada Pie')
plt.ylabel('Carga (%)')
plt.xticks([0, 1], ['Pie Izquierdo', 'Pie Derecho'])

# Añadir valores en el boxplot
for i, columna in enumerate(['Carga en el pie Izq. (%)', 'Carga en el pie Der. (%)']):
    plt.text(i, df_plataforma_seleccionada[columna].median(),
             f"{df_plataforma_seleccionada[columna].median():.2f}",
             ha='center', color='black', weight='bold')

plt.show()

